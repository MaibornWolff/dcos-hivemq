name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
  user: {{FRAMEWORK_USER}}
pods:
  master:
    count: 2
    placement: '{{{NODE_PLACEMENT}}}'
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{HIVEMQ_URI}}
      - {{JAVA_URI}}
      - {{BOOTSTRAP_URI}}
    tasks:
      node:
        {{#TASKCFG_ALL_ENABLE_TLS_LISTENER}}
        transport-encryption:
          - name: node
            type: KEYSTORE
      {{/TASKCFG_ALL_ENABLE_TLS_LISTENER}}
        ports:
      {{#TASKCFG_ALL_ENABLE_CLUSTER}}
          tcp-discovery:
            port: {{TASKCFG_ALL_DISCOVERY_PORT}}
      {{/TASKCFG_ALL_ENABLE_CLUSTER}}
      {{#TASKCFG_ALL_ENABLE_WEBSOCKET_LISTENER}}
          websocket:
            port: {{TASKCFG_ALL_WEBSOCKET_PORT}}
            advertise: true
      {{/TASKCFG_ALL_ENABLE_WEBSOCKET_LISTENER}}
      {{#TASKCFG_MASTER_ENABLE_CONTROL_CENTER}}
          control-center:
            port: {{TASKCFG_MASTER_CONTROL_CENTER_PORT}}
            advertise: true
      {{/TASKCFG_MASTER_ENABLE_CONTROL_CENTER}}
          mqtt-tcp:
            port: {{TASKCFG_ALL_MQTT_PORT}}
            advertise: true
      {{#TASKCFG_ALL_ENABLE_TLS_LISTENER}}
          mqtt-tls:
            port: {{TASKCFG_ALL_TLS_PORT}}
            advertise: true
      {{/TASKCFG_ALL_ENABLE_TLS_LISTENER}}
        goal: RUNNING
        cpus: {{NODE_CPUS}}
        memory: {{NODE_MEM}}
        cmd: |
          ./bootstrap -resolve-hosts=master-0-node.$FRAMEWORK_HOST,master-1-node.$FRAMEWORK_HOST
          export MASTER_0_IP=$(getent hosts master-0-node.$FRAMEWORK_HOST | awk '{ print $1 }')
          export MASTER_1_IP=$(getent hosts master-1-node.$FRAMEWORK_HOST | awk '{ print $1 }')
          export HIVEMQ_DATA_FOLDER=$MESOS_SANDBOX/hivemq-data
          sed -i -e '41d' $MESOS_SANDBOX/hivemq-4.0.2/bin/run.sh
          if [ ! -z "$LICENSE_FILE" ]; then
            echo "$LICENSE_FILE" | base64 -d > $MESOS_SANDBOX/hivemq-4.0.2/license/hivemq.lic
          fi

          chmod 755 $MESOS_SANDBOX/hivemq-4.0.2/bin/run.sh
          JAVA_HOME=$MESOS_SANDBOX/jdk-11.0.2 PATH=$MESOS_SANDBOX/jdk-11.0.2/bin/:$PATH $MESOS_SANDBOX/hivemq-4.0.2/bin/run.sh
        configs:
          config.xml:
            template: config.xml.mustache
            dest: hivemq-4.0.2/conf/config.xml
        volume:
          path: "hivemq-data"
          type: {{NODE_DISK_TYPE}}
          size: {{NODE_DISK}}
        readiness-check:
          cmd: |
            pgrep -f hivemq\.jar
          interval: 10
          delay: 10
          timeout: 5
        health-check:
          cmd: |
            pgrep -f hivemq\.jar
          interval: 10
          grace-period: 20
          delay: 20
          timeout: 5
          max-consecutive-failures: 10
  slave:
    count: {{NODE_COUNT}}
    placement: '{{{NODE_PLACEMENT}}}'
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{HIVEMQ_URI}}
      - {{JAVA_URI}}
      - {{BOOTSTRAP_URI}}
    tasks:
      node:
        {{#TASKCFG_ALL_ENABLE_TLS_LISTENER}}
        transport-encryption:
          - name: node
            type: KEYSTORE
        {{/TASKCFG_ALL_ENABLE_TLS_LISTENER}}
        goal: RUNNING
        cpus: {{NODE_CPUS}}
        memory: {{NODE_MEM}}
        ports:
          mqtt-tcp:
            port: {{TASKCFG_ALL_MQTT_PORT}}
          {{#TASKCFG_ALL_ENABLE_TLS_LISTENER}}
          mqtt-tls:
            port: {{TASKCFG_ALL_TLS_PORT}}
          {{/TASKCFG_ALL_ENABLE_TLS_LISTENER}}
          {{#TASKCFG_ALL_ENABLE_CLUSTER}}
          tcp-discovery:
            port: {{TASKCFG_ALL_DISCOVERY_PORT}}
          {{/TASKCFG_ALL_ENABLE_CLUSTER}}
          {{#TASKCFG_ALL_ENABLE_WEBSOCKET_LISTENER}}
          websocket:
            port: {{TASKCFG_ALL_WEBSOCKET_PORT}}
          {{/TASKCFG_ALL_ENABLE_WEBSOCKET_LISTENER}}
        cmd: |
          ./bootstrap -resolve-hosts=master-0-node.$FRAMEWORK_HOST,master-1-node.$FRAMEWORK_HOST
          export MASTER_0_IP=$(getent hosts master-0-node.$FRAMEWORK_HOST | awk '{ print $1 }')
          export MASTER_1_IP=$(getent hosts master-1-node.$FRAMEWORK_HOST | awk '{ print $1 }')
          export HIVEMQ_DATA_FOLDER=$MESOS_SANDBOX/hivemq-data
          sed -i -e '41d' $MESOS_SANDBOX/hivemq-4.0.2/bin/run.sh
          if [ ! -z "$LICENSE_FILE" ]; then
            echo "$LICENSE_FILE" | base64 -d > $MESOS_SANDBOX/hivemq-4.0.2/license/hivemq.lic
          fi

          chmod 755 $MESOS_SANDBOX/hivemq-4.0.2/bin/run.sh
          JAVA_HOME=$MESOS_SANDBOX/jdk-11.0.2 PATH=$MESOS_SANDBOX/jdk-11.0.2/bin/:$PATH $MESOS_SANDBOX/hivemq-4.0.2/bin/run.sh
        configs:
          config.xml:
            template: config.xml.mustache
            dest: hivemq-4.0.2/conf/config.xml
        volume:
          path: "hivemq-data"
          type: {{NODE_DISK_TYPE}}
          size: {{NODE_DISK}}
        readiness-check:
          cmd: |
            pgrep -f hivemq\.jar
          interval: 10
          delay: 10
          timeout: 5
        health-check:
          cmd: |
            pgrep -f hivemq\.jar
          interval: 10
          grace-period: 20
          delay: 20
          timeout: 5
          max-consecutive-failures: 10
plans:
  deploy:
    strategy: serial
    phases:
      master-parallel-phase:
        strategy: parallel
        pod: master
      slave-parallel-phase:
        strategy: serial
        pod: slave